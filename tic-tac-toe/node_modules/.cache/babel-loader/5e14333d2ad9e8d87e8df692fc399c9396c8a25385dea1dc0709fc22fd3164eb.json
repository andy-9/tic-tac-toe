{"ast":null,"code":"var _jsxFileName = \"/home/andy/Git/learning-react/tic-tac-toe/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: props.highlighted ? {\n      backgroundColor: \"yellow\"\n    } : {},\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}\n_c = Square;\nclass Board extends React.Component {\n  renderSquare(i, highlighted) {\n    // console.log(winningSquares);\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i]\n      // winningArray={winningSquares.winningArray}\n      ,\n      highlighted: highlighted,\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this);\n  }\n  render() {\n    const winnerFunction = calculateWinner(this.props.squares);\n    console.log(winnerFunction.winningArray);\n    // if (calculateWinner(this.props.squares)) {\n    // \tconst winningArray = calculateWinner(\n    // \t\tthis.props.squares\n    // \t).winningArray;\n    // }\n    // console.log(winningArray);\n    // const highlighted = winningSquares ? true : false;\n    const highlighted = false;\n    let rows = [...Array(3).keys()];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [0, 3, 6].map(x => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.renderSquare(row + x,\n          // winningSquares.winningArray,\n          highlighted)\n        }, x, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 8\n        }, this))\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  }\n}\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      ascending: true\n    };\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        player: squares[i],\n        i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n  toggleClick() {\n    this.setState({\n      ascending: !this.state.ascending\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const player = step.player;\n      const coordinates = calculateCoordinates(step.i || 0);\n      const desc = move ? `Player: ${player}, col: ${coordinates.col}, row: ${coordinates.row}` : \"Go to game start\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              fontWeight: this.state.stepNumber === move ? \"bold\" : \"normal\"\n            },\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this);\n    });\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner.winner;\n    } else if (moves.length === 10) {\n      status = \"No winner\";\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n    let {\n      ascending\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 6\n        }, this), ascending ? /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n          reversed: true,\n          children: moves.reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.toggleClick(),\n          children: ascending ? \"sort descending\" : \"sort ascending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 180,\n  columnNumber: 13\n}, this));\nfunction calculateCoordinates(square) {\n  const col = Math.floor(square / 3) + 1;\n  const row = square % 3 + 1;\n  return {\n    col,\n    row\n  };\n}\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        winningArray: lines[i]\n      };\n    }\n  }\n  return null;\n}\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","Square","props","style","highlighted","backgroundColor","className","onClick","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","Component","renderSquare","i","squares","render","winnerFunction","calculateWinner","console","log","winningArray","rows","Array","keys","map","row","x","Game","constructor","state","history","fill","stepNumber","xIsNext","ascending","handleClick","slice","current","length","setState","concat","player","jumpTo","step","toggleClick","winner","moves","move","coordinates","calculateCoordinates","desc","col","fontWeight","status","reversed","reverse","root","createRoot","document","getElementById","square","Math","floor","lines","a","b","c","$RefreshReg$"],"sources":["/home/andy/Git/learning-react/tic-tac-toe/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\n\nfunction Square(props) {\n\treturn (\n\t\t<button\n\t\t\tstyle={props.highlighted ? { backgroundColor: \"yellow\" } : {}}\n\t\t\tclassName=\"square\"\n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component {\n\trenderSquare(i, highlighted) {\n\t\t// console.log(winningSquares);\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\t// winningArray={winningSquares.winningArray}\n\t\t\t\thighlighted={highlighted}\n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst winnerFunction = calculateWinner(this.props.squares);\n\t\tconsole.log(winnerFunction.winningArray);\n\t\t// if (calculateWinner(this.props.squares)) {\n\t\t// \tconst winningArray = calculateWinner(\n\t\t// \t\tthis.props.squares\n\t\t// \t).winningArray;\n\t\t// }\n\t\t// console.log(winningArray);\n\t\t// const highlighted = winningSquares ? true : false;\n\t\tconst highlighted = false;\n\t\tlet rows = [...Array(3).keys()];\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t<div key={row} className=\"board-row\">\n\t\t\t\t\t\t{[0, 3, 6].map((x) => (\n\t\t\t\t\t\t\t<span key={x}>\n\t\t\t\t\t\t\t\t{this.renderSquare(\n\t\t\t\t\t\t\t\t\trow + x,\n\t\t\t\t\t\t\t\t\t// winningSquares.winningArray,\n\t\t\t\t\t\t\t\t\thighlighted\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t\t},\n\t\t\t],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\tascending: true,\n\t\t};\n\t}\n\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares,\n\t\t\t\t\tplayer: squares[i],\n\t\t\t\t\ti,\n\t\t\t\t},\n\t\t\t]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t});\n\t}\n\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 === 0,\n\t\t});\n\t}\n\n\ttoggleClick() {\n\t\tthis.setState({\n\t\t\tascending: !this.state.ascending,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst player = step.player;\n\t\t\tconst coordinates = calculateCoordinates(step.i || 0);\n\t\t\tconst desc = move\n\t\t\t\t? `Player: ${player}, col: ${coordinates.col}, row: ${coordinates.row}`\n\t\t\t\t: \"Go to game start\";\n\t\t\treturn (\n\t\t\t\t<div key={move}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontWeight:\n\t\t\t\t\t\t\t\t\tthis.state.stepNumber === move\n\t\t\t\t\t\t\t\t\t\t? \"bold\"\n\t\t\t\t\t\t\t\t\t\t: \"normal\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={() => this.jumpTo(move)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{desc}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = \"Winner: \" + winner.winner;\n\t\t} else if (moves.length === 10) {\n\t\t\tstatus = \"No winner\";\n\t\t} else {\n\t\t\tstatus = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n\t\t}\n\n\t\tlet { ascending } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t{ascending ? (\n\t\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ol reversed>{moves.reverse()}</ol>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={() => this.toggleClick()}>\n\t\t\t\t\t\t{ascending ? \"sort descending\" : \"sort ascending\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Game />);\n\nfunction calculateCoordinates(square) {\n\tconst col = Math.floor(square / 3) + 1;\n\tconst row = (square % 3) + 1;\n\treturn { col, row };\n}\n\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (\n\t\t\tsquares[a] &&\n\t\t\tsquares[a] === squares[b] &&\n\t\t\tsquares[a] === squares[c]\n\t\t) {\n\t\t\treturn { winner: squares[a], winningArray: lines[i] };\n\t\t}\n\t}\n\treturn null;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,MAAMA,CAACC,KAAK,EAAE;EACtB,oBACCF,OAAA;IACCG,KAAK,EAAED,KAAK,CAACE,WAAW,GAAG;MAAEC,eAAe,EAAE;IAAS,CAAC,GAAG,CAAC,CAAE;IAC9DC,SAAS,EAAC,QAAQ;IAClBC,OAAO,EAAEL,KAAK,CAACK,OAAQ;IAAAC,QAAA,EAEtBN,KAAK,CAACO;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEX;AAACC,EAAA,GAVQb,MAAM;AAYf,MAAMc,KAAK,SAASlB,KAAK,CAACmB,SAAS,CAAC;EACnCC,YAAYA,CAACC,CAAC,EAAEd,WAAW,EAAE;IAC5B;IACA,oBACCJ,OAAA,CAACC,MAAM;MACNQ,KAAK,EAAE,IAAI,CAACP,KAAK,CAACiB,OAAO,CAACD,CAAC;MAC3B;MAAA;MACAd,WAAW,EAAEA,WAAY;MACzBG,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACL,KAAK,CAACK,OAAO,CAACW,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC;EAEJ;EAEAO,MAAMA,CAAA,EAAG;IACR,MAAMC,cAAc,GAAGC,eAAe,CAAC,IAAI,CAACpB,KAAK,CAACiB,OAAO,CAAC;IAC1DI,OAAO,CAACC,GAAG,CAACH,cAAc,CAACI,YAAY,CAAC;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMrB,WAAW,GAAG,KAAK;IACzB,IAAIsB,IAAI,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAC;IAC/B,oBACC5B,OAAA;MAAAQ,QAAA,EACEkB,IAAI,CAACG,GAAG,CAAEC,GAAG,iBACb9B,OAAA;QAAeM,SAAS,EAAC,WAAW;QAAAE,QAAA,EAClC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACqB,GAAG,CAAEE,CAAC,iBAChB/B,OAAA;UAAAQ,QAAA,EACE,IAAI,CAACS,YAAY,CACjBa,GAAG,GAAGC,CAAC;UACP;UACA3B,WAAW;QACX,GALS2B,CAAC;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOZ;MAAC,GATOiB,GAAG;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAWb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAER;AACD;AAEA,MAAMmB,IAAI,SAASnC,KAAK,CAACmB,SAAS,CAAC;EAClCiB,WAAWA,CAAC/B,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACgC,KAAK,GAAG;MACZC,OAAO,EAAE,CACR;QACChB,OAAO,EAAEQ,KAAK,CAAC,CAAC,CAAC,CAACS,IAAI,CAAC,IAAI;MAC5B,CAAC,CACD;MACDC,UAAU,EAAE,CAAC;MACbC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACZ,CAAC;EACF;EAEAC,WAAWA,CAACtB,CAAC,EAAE;IACd,MAAMiB,OAAO,GAAG,IAAI,CAACD,KAAK,CAACC,OAAO,CAACM,KAAK,CAAC,CAAC,EAAE,IAAI,CAACP,KAAK,CAACG,UAAU,GAAG,CAAC,CAAC;IACtE,MAAMK,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAM,GAAG,CAAC,CAAC;IAC3C,MAAMxB,OAAO,GAAGuB,OAAO,CAACvB,OAAO,CAACsB,KAAK,EAAE;IACvC,IAAInB,eAAe,CAACH,OAAO,CAAC,IAAIA,OAAO,CAACD,CAAC,CAAC,EAAE;MAC3C;IACD;IACAC,OAAO,CAACD,CAAC,CAAC,GAAG,IAAI,CAACgB,KAAK,CAACI,OAAO,GAAG,GAAG,GAAG,GAAG;IAC3C,IAAI,CAACM,QAAQ,CAAC;MACbT,OAAO,EAAEA,OAAO,CAACU,MAAM,CAAC,CACvB;QACC1B,OAAO,EAAEA,OAAO;QAChB2B,MAAM,EAAE3B,OAAO,CAACD,CAAC,CAAC;QAClBA;MACD,CAAC,CACD,CAAC;MACFmB,UAAU,EAAEF,OAAO,CAACQ,MAAM;MAC1BL,OAAO,EAAE,CAAC,IAAI,CAACJ,KAAK,CAACI;IACtB,CAAC,CAAC;EACH;EAEAS,MAAMA,CAACC,IAAI,EAAE;IACZ,IAAI,CAACJ,QAAQ,CAAC;MACbP,UAAU,EAAEW,IAAI;MAChBV,OAAO,EAAEU,IAAI,GAAG,CAAC,KAAK;IACvB,CAAC,CAAC;EACH;EAEAC,WAAWA,CAAA,EAAG;IACb,IAAI,CAACL,QAAQ,CAAC;MACbL,SAAS,EAAE,CAAC,IAAI,CAACL,KAAK,CAACK;IACxB,CAAC,CAAC;EACH;EAEAnB,MAAMA,CAAA,EAAG;IACR,MAAMe,OAAO,GAAG,IAAI,CAACD,KAAK,CAACC,OAAO;IAClC,MAAMO,OAAO,GAAGP,OAAO,CAAC,IAAI,CAACD,KAAK,CAACG,UAAU,CAAC;IAC9C,MAAMa,MAAM,GAAG5B,eAAe,CAACoB,OAAO,CAACvB,OAAO,CAAC;IAC/C,MAAMgC,KAAK,GAAGhB,OAAO,CAACN,GAAG,CAAC,CAACmB,IAAI,EAAEI,IAAI,KAAK;MACzC,MAAMN,MAAM,GAAGE,IAAI,CAACF,MAAM;MAC1B,MAAMO,WAAW,GAAGC,oBAAoB,CAACN,IAAI,CAAC9B,CAAC,IAAI,CAAC,CAAC;MACrD,MAAMqC,IAAI,GAAGH,IAAI,GACb,WAAUN,MAAO,UAASO,WAAW,CAACG,GAAI,UAASH,WAAW,CAACvB,GAAI,EAAC,GACrE,kBAAkB;MACrB,oBACC9B,OAAA;QAAAQ,QAAA,eACCR,OAAA;UAAAQ,QAAA,eACCR,OAAA;YACCG,KAAK,EAAE;cACNsD,UAAU,EACT,IAAI,CAACvB,KAAK,CAACG,UAAU,KAAKe,IAAI,GAC3B,MAAM,GACN;YACL,CAAE;YACF7C,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACwC,MAAM,CAACK,IAAI,CAAE;YAAA5C,QAAA,EAEhC+C;UAAI;YAAA7C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACL,GAbIuC,IAAI;QAAA1C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAcR;IAER,CAAC,CAAC;IAEF,IAAI6C,MAAM;IACV,IAAIR,MAAM,EAAE;MACXQ,MAAM,GAAG,UAAU,GAAGR,MAAM,CAACA,MAAM;IACpC,CAAC,MAAM,IAAIC,KAAK,CAACR,MAAM,KAAK,EAAE,EAAE;MAC/Be,MAAM,GAAG,WAAW;IACrB,CAAC,MAAM;MACNA,MAAM,GAAG,eAAe,IAAI,IAAI,CAACxB,KAAK,CAACI,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;IAC5D;IAEA,IAAI;MAAEC;IAAU,CAAC,GAAG,IAAI,CAACL,KAAK;IAE9B,oBACClC,OAAA;MAAKM,SAAS,EAAC,MAAM;MAAAE,QAAA,gBACpBR,OAAA;QAAKM,SAAS,EAAC,YAAY;QAAAE,QAAA,eAC1BR,OAAA,CAACe,KAAK;UACLI,OAAO,EAAEuB,OAAO,CAACvB,OAAQ;UACzBZ,OAAO,EAAGW,CAAC,IAAK,IAAI,CAACsB,WAAW,CAACtB,CAAC;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACnC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG,eACNb,OAAA;QAAKM,SAAS,EAAC,WAAW;QAAAE,QAAA,gBACzBR,OAAA;UAAAQ,QAAA,EAAMkD;QAAM;UAAAhD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,EAClB0B,SAAS,gBACTvC,OAAA;UAAAQ,QAAA,EAAK2C;QAAK;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,gBAEhBb,OAAA;UAAI2D,QAAQ;UAAAnD,QAAA,EAAE2C,KAAK,CAACS,OAAO;QAAE;UAAAlD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACNb,OAAA;QAAAQ,QAAA,eACCR,OAAA;UAAQO,OAAO,EAAEA,CAAA,KAAM,IAAI,CAAC0C,WAAW,EAAG;UAAAzC,QAAA,EACxC+B,SAAS,GAAG,iBAAiB,GAAG;QAAgB;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACzC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAER;AACD;;AAEA;;AAEA,MAAMgD,IAAI,GAAG/D,QAAQ,CAACgE,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACzC,MAAM,eAACpB,OAAA,CAACgC,IAAI;EAAAtB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,CAAC;AAErB,SAASyC,oBAAoBA,CAACW,MAAM,EAAE;EACrC,MAAMT,GAAG,GAAGU,IAAI,CAACC,KAAK,CAACF,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;EACtC,MAAMnC,GAAG,GAAImC,MAAM,GAAG,CAAC,GAAI,CAAC;EAC5B,OAAO;IAAET,GAAG;IAAE1B;EAAI,CAAC;AACpB;AAEA,SAASR,eAAeA,CAACH,OAAO,EAAE;EACjC,MAAMiD,KAAK,GAAG,CACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACT;EAED,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkD,KAAK,CAACzB,MAAM,EAAEzB,CAAC,EAAE,EAAE;IACtC,MAAM,CAACmD,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAAK,CAAClD,CAAC,CAAC;IAC1B,IACCC,OAAO,CAACkD,CAAC,CAAC,IACVlD,OAAO,CAACkD,CAAC,CAAC,KAAKlD,OAAO,CAACmD,CAAC,CAAC,IACzBnD,OAAO,CAACkD,CAAC,CAAC,KAAKlD,OAAO,CAACoD,CAAC,CAAC,EACxB;MACD,OAAO;QAAErB,MAAM,EAAE/B,OAAO,CAACkD,CAAC,CAAC;QAAE5C,YAAY,EAAE2C,KAAK,CAAClD,CAAC;MAAE,CAAC;IACtD;EACD;EACA,OAAO,IAAI;AACZ;AAAC,IAAAJ,EAAA;AAAA0D,YAAA,CAAA1D,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}